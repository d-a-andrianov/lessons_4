'use strict'

// Задача 4.11.1

// Переписать игровой бот для игры "Угадай число"
// Функционал остаётся прежний, но вместо цикла (while или for) используйте рекурсию

// Написать простой игровой бот "Угадай число", который умеет следующее:

// Загадывает число от 1 до 100;
// предлагает пользователю ввести свой вариант отгадки;
// если пользовательское число больше, чем загаданное, то бот выводит “Меньше!” и предлагает ввести новый вариант;
// если пользовательское число меньше, чем загаданное, то бот выводит “Больше!” и предлагает ввести новый вариант;
// если пользователь вводит правильное число, то бот выводит “Правильно!”;
// если пользователь ввел не число, то выводит “Введи число!”;
// если пользователь нажимает “Отмена”, то игра заканчивается.

// запускаем рекурсию (функцию)
const start = guessNumber => {

  // задаем переменную для рандомного числа
  const randomNumber = Math.ceil(Math.random() * 100);
  // выводим рандомное число для проверки
  console.log(randomNumber);

  let userNum = prompt('Введите число', '');
  if (userNum === null) {
    return;
  }

  // приведение данных из prompt к числу
  // userNum = +userNum;

  // prompt возвращает текст, знаком + приводим тип данных к числовому
  // если число NaN или пустое поле
  if (isNaN(+userNum) || (userNum === '')) {
    alert('Введи число! (пользователь ввел не число)');
  } else if (+userNum > randomNumber) {
    alert('Больше! (пользовательское число меньше, чем загаданное)');
  } else if (+userNum < randomNumber) {
    alert('Меньше! (пользовательское число больше, чем загаданное)');
    // в остальных случаях, т.е. если число угадано
  } else {
    alert('Правильно! (пользователь вводит правильное число)');
    return;
  }
  // первый вызов ф-ии
  start();
};
// после ф-ии еще раз вызываем ф-ию
start();